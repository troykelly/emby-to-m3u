[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "github-automation"
version = "1.0.0"
description = "Best-in-class GitHub automation scripts with Claude-Flow integration"
# readme = "README.md"  # Optional - not needed for internal tools
authors = [
    {name = "Aperim Template", email = "automation@aperim.com"},
]
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    "click>=8.0.0",
    "gitpython>=3.1.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "pyyaml>=6.0.0",
    "rich>=13.0.0",
    "watchdog>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "coverage>=7.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/aperim/claude-flow-template"
Repository = "https://github.com/aperim/claude-flow-template"
Documentation = "https://github.com/aperim/claude-flow-template/tree/main/.agent/docs"
"Bug Tracker" = "https://github.com/aperim/claude-flow-template/issues"

[project.scripts]
github-pr-worker = "github_automation.cli.pr_worker_cli:main"
github-issue-worker = "github_automation.cli.issue_worker_cli:main"
github-epic-worker = "github_automation.cli.epic_worker_cli:main"
claude-log-interpreter = "github_automation.cli.log_interpreter_cli:main"

[tool.hatch.build.targets.wheel]
packages = ["github_automation"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["github_automation"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]