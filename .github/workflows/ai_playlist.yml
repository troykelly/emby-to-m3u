name: AI Playlist CI/CD

on:
  push:
    branches: [main, develop, 004-build-ai-ml]
    paths:
      - 'src/ai_playlist/**'
      - 'tests/**'
      - 'requirements.txt'
      - '.github/workflows/ai_playlist.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/ai_playlist/**'
      - 'tests/**'
      - 'requirements.txt'

env:
  PYTHON_VERSION: '3.13'

jobs:
  test:
    name: Test AI Playlist Module
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint black mypy

      - name: Lint with pylint
        run: |
          pylint src/ai_playlist/ --exit-zero --output-format=colorized
        continue-on-error: true

      - name: Check formatting with black
        run: |
          black --check src/ai_playlist/
        continue-on-error: true

      - name: Type check with mypy
        run: |
          mypy src/ai_playlist/ --ignore-missing-imports
        continue-on-error: true

      - name: Run tests with pytest
        run: |
          pytest tests/ --cov=src/ai_playlist --cov-report=xml --cov-report=term-missing
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: ai_playlist
          name: ai-playlist-coverage
        if: always()

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ai-playlist:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm ai-playlist:test python -c "import src.ai_playlist; print('AI Playlist module loaded successfully')"
          docker run --rm ai-playlist:test python -m src.ai_playlist --help || echo "CLI help executed"

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run safety check
        run: |
          safety check --json || true
        continue-on-error: true

      - name: Run bandit security scan
        run: |
          bandit -r src/ai_playlist/ -f json -o bandit-report.json || true
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
        if: always()
